/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Accueil as PrismaAccueil } from "@prisma/client";

export class AccueilServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AccueilCountArgs, "select">): Promise<number> {
    return this.prisma.accueil.count(args);
  }

  async accueils<T extends Prisma.AccueilFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccueilFindManyArgs>
  ): Promise<PrismaAccueil[]> {
    return this.prisma.accueil.findMany<Prisma.AccueilFindManyArgs>(args);
  }
  async accueil<T extends Prisma.AccueilFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccueilFindUniqueArgs>
  ): Promise<PrismaAccueil | null> {
    return this.prisma.accueil.findUnique(args);
  }
  async createAccueil<T extends Prisma.AccueilCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccueilCreateArgs>
  ): Promise<PrismaAccueil> {
    return this.prisma.accueil.create<T>(args);
  }
  async updateAccueil<T extends Prisma.AccueilUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccueilUpdateArgs>
  ): Promise<PrismaAccueil> {
    return this.prisma.accueil.update<T>(args);
  }
  async deleteAccueil<T extends Prisma.AccueilDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccueilDeleteArgs>
  ): Promise<PrismaAccueil> {
    return this.prisma.accueil.delete(args);
  }
}
