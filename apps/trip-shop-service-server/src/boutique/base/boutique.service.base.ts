/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Boutique as PrismaBoutique } from "@prisma/client";

export class BoutiqueServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BoutiqueCountArgs, "select">): Promise<number> {
    return this.prisma.boutique.count(args);
  }

  async boutiques<T extends Prisma.BoutiqueFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.BoutiqueFindManyArgs>
  ): Promise<PrismaBoutique[]> {
    return this.prisma.boutique.findMany<Prisma.BoutiqueFindManyArgs>(args);
  }
  async boutique<T extends Prisma.BoutiqueFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.BoutiqueFindUniqueArgs>
  ): Promise<PrismaBoutique | null> {
    return this.prisma.boutique.findUnique(args);
  }
  async createBoutique<T extends Prisma.BoutiqueCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BoutiqueCreateArgs>
  ): Promise<PrismaBoutique> {
    return this.prisma.boutique.create<T>(args);
  }
  async updateBoutique<T extends Prisma.BoutiqueUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BoutiqueUpdateArgs>
  ): Promise<PrismaBoutique> {
    return this.prisma.boutique.update<T>(args);
  }
  async deleteBoutique<T extends Prisma.BoutiqueDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.BoutiqueDeleteArgs>
  ): Promise<PrismaBoutique> {
    return this.prisma.boutique.delete(args);
  }
}
